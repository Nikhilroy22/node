const initSqlJs = require("sql.js");
const fs = require("fs");
const path = require("path");

let db, SQL;

async function initDatabase() {
  SQL = await initSqlJs();

  const dbPath = path.join(__dirname, "../db/mydb.sqlite");

  if (fs.existsSync(dbPath)) {
    const fileBuffer = fs.readFileSync(dbPath);
    db = new SQL.Database(fileBuffer);
    console.log("‚úÖ ‡¶™‡ßÅ‡¶∞‡¶æ‡¶§‡¶® ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶≤‡ßã‡¶° ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá");
  } else {
    db = new SQL.Database();
    db.run(`
      CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        email TEXT NOT NULL UNIQUE
      )
    `);
    console.log("üÜï ‡¶®‡¶§‡ßÅ‡¶® ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá");
  }
}

// ‚úÖ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
function addUser(name, email) {
  const stmt = db.prepare("INSERT INTO users (name, email) VALUES (?, ?)");
  stmt.run([name, email]);
  stmt.free();
}

// ‚úÖ ‡¶∏‡¶¨ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶´‡ßá‡¶∞‡¶§ ‡¶¶‡ßá‡ßü
function getAllUsers() {
  const stmt = db.prepare("SELECT * FROM users");
  const users = [];
  while (stmt.step()) {
    users.push(stmt.getAsObject());
  }
  stmt.free();
  return users;
}

// ‚úÖ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶´‡ßá‡¶∞‡¶§ ‡¶¶‡ßá‡ßü ID ‡¶¶‡¶ø‡ßü‡ßá
function getUserById(id) {
  const stmt = db.prepare("SELECT * FROM users WHERE id = ?");
  stmt.bind([id]);
  if (stmt.step()) {
    const user = stmt.getAsObject();
    stmt.free();
    return user;
  }
  stmt.free();
  return null;
}

// ‚úÖ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡ßá
function updateUser(id, name, email) {
  const stmt = db.prepare("UPDATE users SET name = ?, email = ? WHERE id = ?");
  stmt.run([name, email, id]);
  stmt.free();
  console.log(`üîÑ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá (ID=${id})`);
}

// ‚úÖ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡ßá
function deleteUser(id) {
  const stmt = db.prepare("DELETE FROM users WHERE id = ?");
  stmt.run([id]);
  stmt.free();
  console.log(`üóëÔ∏è ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá (ID=${id})`);
}

// ‚úÖ ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶´‡¶æ‡¶á‡¶≤ ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶∏‡ßá‡¶≠ ‡¶ï‡¶∞‡ßá
function saveToFile() {
  const binaryArray = db.export();
  const dbPath = path.join(__dirname, "../db/mydb.sqlite");
  fs.writeFileSync(dbPath, Buffer.from(binaryArray));
  console.log("üíæ ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶∏‡ßá‡¶≠ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá:", dbPath);
}

module.exports = {
  initDatabase,
  addUser,
  getAllUsers,
  getUserById,
  updateUser,
  deleteUser,
  saveToFile
};